from aiogram import Router
from aiogram.types import Message
from firebase_admin import db

from background import logging
from filters.is_not_registered import IsNotRegistered
from keyboards.builder_keyboard import build_kb

router = Router()


@router.message(IsNotRegistered())
async def register(message: Message):
    """
    Set default user's params in DB
    :param message: Message
    """
    db.reference('/users/').update({
        f'{message.chat.id}': {
            'username': f'@{message.from_user.username}',
            'first_name': f'{message.from_user.first_name}',
            'last_name': f'{message.from_user.last_name if message.from_user.last_name is not None else ""}',
            'full_name': f'{message.from_user.full_name}',
            'subscription': True,
            'role': {
                'admin': False,
                'prof_bureau': False
            },
            'ban': {
                'banned': False,
                'ban_reason': '',
            }
        }
    })
    logging(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} @{message.from_user.username} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è')
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç üëã\n"
        "–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ò–ø–∞—Ç–æ–≤–∞ –ò–≤–∞–Ω–∞,\n"
        "–ø–æ–º–æ–≥–∞—é –µ–º—É —Å —Ä–∞–∑–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ –≤–µ—â–∞–º–∏,\n"
        "–±—É–¥—É —Ä–∞–¥ –∏ —Ç–µ–±–µ –ø–æ–º–æ—á—å!", reply_markup=build_kb("–ü—Ä–∏–≤–µ–µ–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å –º–µ–Ω—è –≤ /menu üòä"))
